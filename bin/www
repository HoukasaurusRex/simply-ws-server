#!/usr/bin/env node

const debug = require('debug')('simply-ws-server:server')
const WebSocket = require('ws')
const app = require('../app')
const normalizePort = require('../utils/normalize-port')

const port = normalizePort(process.env.PORT || '9000')
const wss = new WebSocket.Server({ port })

/**
 * On Listening
 * @description event listener for WSS server "listening" event
 */
function onListening() {
  const addr = wss.address()
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  debug('Listening on ' + bind)
  console.log(
    `Websockets server listening at ${
      addr.address === '::' ? 'wss://localhost:' : addr.address
    }${wss.address().port}`
  )
}

/**
 * On Error
 * @description Event listener for WSS server "error" event.
 * @param {Error} error
 * @throws Error
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }
  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

wss.on('connection', app)
wss.on('listening', onListening)
wss.on('error', onError)
